services:
  odin:
    build:
      context: .
      dockerfile: build/package/dockerfiles/odin.dockerfile
    ports:
      - "8080:8080"
    command: "air -c .air.odin.toml"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "netstat -ltn | grep -q 8080"]
      timeout: 5s
      retries: 3
    env_file:
      - .env
    volumes:
      - ./cmd:/valkyrie/odin/cmd
      - ./internal:/valkyrie/odin/internal

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  skald:
    build:
      context: .
      dockerfile: build/package/dockerfiles/skald.dockerfile
    command: "air -c .air.skald.toml"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      odin:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./cmd:/valkyrie/skald/cmd
      - ./internal:/valkyrie/skald/internal
      - config:/valkyrie/config/keys
  
  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  ubuntu_nix_full:
    build:
      context: .
      dockerfile: build/platforms/ubuntu/ubuntu_full.dockerfile
    env_file:
      - .env
    deploy:
      replicas: ${CONTAINERS}
    ports:
      - 22
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      odin:
        condition: service_healthy
      skald:
        condition: service_started
    volumes:
      - config:/valkyrie/config/keys

volumes:
  config: