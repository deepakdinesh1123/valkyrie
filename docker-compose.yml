services:
  ide:
    build:
      context: frontend
    ports:
      - "5173:5173"
    profiles:
      - execution

  odin:
    image: odin:0.0.1
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      odin_store:
        condition: service_healthy
    command: ["server", "start"]
    ports:
      - "8080:8080"
      

  odin-worker:
    image: odin:0.0.1
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      odin:
        condition: service_started
      odin_store:
        condition: service_healthy
    deploy:
      replicas: 1
    command: ["worker", "start"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: "root"
    # environment:
    #   - DOCKER_HOST=unix:///var/run/docker.sock
  
  odin_store:
    build:
      context: .
      dockerfile: builds/images/store/store.dockerfile
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD-SHELL", '[ "$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)" = "404" ] && exit 0 || exit 1'] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  valkyrie-otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./configs/telemetry/collector.yml:/etc/otel-collector-config.yaml
    ports:
      - 4317:4317 # OTLP grpc receiver
    profiles:
      - production
      - staging

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp" # UDP port for Jaeger agent
      - "16686:16686" # Web UI
      - "14268:14268" # HTTP port for spans
    profiles:
      - production
      - staging

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/telemetry/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    profiles:
      - production
      - staging
