/*
 * API Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.6.0
 */


import http from "k6/http";
import { group, check, sleep } from "k6";
import { SharedArray } from 'k6/data';
import { vu } from 'k6/execution';
import sse from "k6/x/sse";


const data = new SharedArray('data', function() {
    return JSON.parse(open('./load-test-data.json'));
});

export const options = {
    scenarios: {
      execute: {
        executor: 'per-vu-iterations',
        vus: __ENV.VUS,
        iterations: __ENV.ITERATIONS,
        maxDuration: __ENV.MAX_DURATION,
      },
    },
};

const BASE_URL = `${__ENV.BASE_URL}`;
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = __ENV.SLEEP_DURATION;

export default function() {

    group("execute code", () => {
        {
            let url = BASE_URL + `/executions/execute`;
            let body = data[vu.idInTest - 1];
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200,
            });
        }

        const resp = sse.open(url, params, function(client)  {
            client.on('open', function open() {

            }) 

            client.on('event', function (event) {
                
            })
    
            client.on('error', function (e) {

            })
        })

        check(response, {"status is 200": (r) => r && r.status === 200})
        
    });

}
