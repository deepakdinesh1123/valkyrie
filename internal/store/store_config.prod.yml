languages:
  - name: generic
    extension: none
    versions:
      - default: true

  - name: python
    extension: py
    monacoLanguage: python
    versions:
      - nixPackage: "python314"
        default: true
        version: "3.14"
      - nixPackage: "python313"
        version: "3.13"
      - nixPackage: "python312Full"
        version: "3.12"
      - nixPackage: "python311"
        version: "3.11"
      - nixPackage: "python310"
        version: "3.10"
    template: |
      {{  define "execute" }} uv run {{- range .LanguageDependencies }} --with "{{.}}" {{ end }} {{- if not .IsFlake }} --index {{ .PkgIndex }} {{- end }} main.py {{ end }}
    defaultCode: |
      print("Hello World")

  - name: go
    extension: go
    monacoLanguage: go
    versions:
      - nixPackage: "go"
        default: true
        version: "1.24.3"
      - nixPackage: "go_1_23"
        version: "1.23.9"
    template: |
      {{ define "compile" }} go build main.go {{ .CompilerArgs }}{{ end }}
      {{ define "execute" }} ./main {{ end }}
    defaultCode: |
      package main
      import "fmt"

      func main() {
          fmt.Println("Hello, World!")
      }

  - name: ada
    extension: adb
    monacoLanguage: ada
    versions:
      - nixPackage: "gnat"
      - nixPackage: "gnat13"
      - nixPackage: "gnat14"
        default: true
    template: |
      {{ define "compile" }} gnatmake main.adb {{ .CompilerArgs }}{{ end }}
      {{ define "execute" }} ./main {{ end }}
    defaultCode: |
      with Ada.Text_IO; use Ada.Text_IO;
      procedure Hello is

      begin
        Put_Line("Hello, World!");
      end Hello;

  - name: assembly
    extension: asm
    monacoLanguage: assembly
    versions:
      - nixPackage: "nasm"
        default: true
    template: |
      {{ define "compile" }} nasm -f elf64 main.asm -o main.o {{ .CompilerArgs }}
      ld -o main main.o {{ end }}

      {{ define "execute" }} ./main {{ end }}
    defaultCode: |
      section .data
          msg db "Hello, World!",0

      section .text
          global _start

      _start:
          mov rax, 1
          mov rdi, 1
          mov rsi, msg
          mov rdx, 13
          syscall
          mov rax, 60
          xor rdi, rdi
          syscall

  - name: bash
    extension: bash
    monacoLanguage: shell
    versions:
      - nixPackage: "bash"
        default: true
        version: "5.2"
    template: |
      {{ define "execute" }} bash main.bash {{ end }}
    defaultCode: |
      echo hello

  - name: bun
    extension: js
    monacoLanguage: javascript
    versions:
      - nixPackage: "bun"
        default: true
        version: "1.2.14"
    template: |
      {{ define "execute" }} bun run main.js {{ end }}
    defaultCode: |
      console.log("Hello World!")

  - name: crystal
    extension: cr
    monacoLanguage: crystal
    versions:
      - nixPackage: "crystal"
        default: true
    template: |
      {{ define "execute" }} crystal run main.cr {{ end }}
    defaultCode: |
      puts "Hello World"

  - name: dart
    extension: dart
    monacoLanguage: dart
    versions:
      - nixPackage: "dart"
        default: true
    template: |
      {{ define "execute" }} dart run main.dart {{ end }}
    defaultCode: |
      void main() {
        print("Hello, World!");
      }

  - name: deno
    extension: ts
    monacoLanguage: typescript
    versions:
      - nixPackage: "deno"
        default: true
        version: "2.3.5"
    template: |
      {{ define "execute" }} deno run main.ts {{ end }}
    defaultCode: |
      console.log("Hello World");

  - name: fortran
    extension: f90
    monacoLanguage: fortran
    versions:
      - nixPackage: "gfortran"
        default: true
      - nixPackage: "gfortran12"
    template: |
      {{ define "compile" }} gfortran main.f90 {{ .CompilerArgs }} {{ end }}

      {{ define "execute" }} ./a.out {{ end }}
    defaultCode: |
      program hello
        print *, "Hello, World!"
      end program hello

  - name: groovy
    extension: groovy
    monacoLanguage: groovy
    versions:
      - nixPackage: "groovy"
        default: true
    template: |
      {{ define "execute" }} groovy main.groovy {{ end }}
    defaultCode: |
      println "Hello World!"

  - name: julia
    extension: jl
    monacoLanguage: julia
    versions:
      - nixPackage: "julia"
        default: true
      - nixPackage: "julia_19"
    template: |
      {{  define "execute" }} julia main.jl {{ end }}
    defaultCode: |
      println("Hello, World!")

  - name: lua
    extension: lua
    monacoLanguage: lua
    versions:
      - nixPackage: "lua"
        default: true
      - nixPackage: "lua5_4_compat"
      - nixPackage: "lua5_3_compat"
    template: |
      {{  define "execute" }} lua main.lua {{ end }}
    defaultCode: |
      print("Hello, World!")

  - name: nim
    extension: nim
    monacoLanguage: nim
    versions:
      - nixPackage: "nim"
        default: true
    template: |
      {{ define "compile" }} nim c -d:nodebug main.nim {{ .CompilerArgs }} {{ end }}

      {{ define "execute" }} ./main {{ end }}
    defaultCode: |
      echo "Hello, World!"

  - name: node
    extension: js
    monacoLanguage: javascript
    versions:
      - nixPackage: "nodejs_24"
        version: "24.1.0"
      - nixPackage: "nodejs_22"
        version: "22.14.0"
      - nixPackage: "nodejs_20"
        default: true
        version: "20.19.2"
    template: |
      {{ define "execute" }} node main.js {{ end }}
    defaultCode: |
      console.log("Hello World!");
    deps:
      - lodash

  - name: perl
    extension: pl
    monacoLanguage: perl
    versions:
      - nixPackage: "perl540"
        default: true
      - nixPackage: "perl538"
    template: |
      {{ define "execute" }} perl main.pl {{ end }}
    defaultCode: |
      #!/usr/bin/perl
      use strict;
      use warnings;
      print "Hello, World!\n";

  - name: php
    extension: php
    monacoLanguage: php
    versions:
      - nixPackage: "php"
        default: true
      - nixPackage: "php83"
      - nixPackage: "php81"
    template: |
      {{ define "execute" }} php main.php {{ end }}
    defaultCode: |
      <?php echo "Hello, World!"; ?>

  - name: rust
    extension: rs
    monacoLanguage: rust
    versions:
      - nixPackage: "rustc"
        default: true
        version: "1.86.0"
    template: |
      {{ define "compile" }} rustc main.rs {{ .CompilerArgs }} {{ end }}
      {{ define "execute" }} ./main {{ end }}
    defaultCode: |
      fn main() {
          println!("Hello, world!");
      }

  - name: ruby
    extension: rb
    monacoLanguage: ruby
    versions:
      - nixPackage: "ruby"
      - nixPackage: "ruby_3_4"
        default: true
      - nixPackage: "ruby_3_2"
    template: |
      {{  define "execute" }} ruby main.rb {{ end }}
    defaultCode: |
      puts "Hello, World!"

  - name: sql
    extension: sql
    monacoLanguage: sql
    versions:
      - nixPackage: "sqlite"
        default: true
        version: "3.48.0"
    template: |
      {{ define "execute" }} sqlite3 sample.db < main.sql {{ end }}
    defaultCode: |
      CREATE TABLE employees (
          id INT PRIMARY KEY,
          name VARCHAR(100),
          salary DECIMAL(10, 2)
      );

  - name: zig
    extension: zig
    monacoLanguage: zig
    versions:
      - nixPackage: "zig"
        default: true
    template: |
      {{ define "compile" }} zig build-exe main.zig {{- .CompilerArgs -}} {{ end }}
      {{ define "execute" }} ./main {{ end }}
    defaultCode: |
      const std = @import("std");

      pub fn main() !void {
          const stdout = std.io.getStdOut().writer();
          try stdout.print("Hello, World!\n", .{});
      }

  - name: odin
    extension: odin
    monacoLanguage: odin
    versions:
      - nixPackage: "odin"
        default: true
    template: |
      {{ define "execute" }} odin run main.odin -file  {{ end }}
    defaultCode: |
      package main

      import "core:fmt"

      main :: proc() {
      	fmt.println("Hellope!")
      }
