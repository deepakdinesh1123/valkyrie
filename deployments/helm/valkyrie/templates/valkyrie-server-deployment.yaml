apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkyrie-server
  labels:
    app: valkyrie
    component: server
    admin: yes
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app: valkyrie
      component: server
      admin: yes
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: valkyrie
        component: server
        admin: yes
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for DB at $POSTGRES_HOST:$POSTGRES_PORT..."
              for i in $(seq 1 30); do
                if nc -z -w1 "$POSTGRES_HOST" "$POSTGRES_PORT"; then
                  echo "Database is available!"
                  exit 0
                fi
                echo "Waiting for database... ($i)"
                sleep 2
              done
              echo "Database not reachable after 60 seconds, exiting."
              exit 1
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: valkyrie-env
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: valkyrie-env
                  key: POSTGRES_PORT
      containers:
        - args:
            - server
            - start
          envFrom:
            - configMapRef:
                name: valkyrie-env
          image: {{ .Values.valkyrie.image | default "valkyrie:0.0.1" | quote }}
          name: valkyrie
          ports:
            - name: web
              containerPort: {{ .Values.valkyrie.port | default 8080 }}
          # volumeMounts:
          #   - mountPath: /home/valnix/.valkyrie_info
          #     name: valkyrie-server-vol
          readinessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.valkyrie.port | default 8080 }}
            initialDelaySeconds: 30 
            periodSeconds: 30
            timeoutSeconds: 5 
            successThreshold: 1
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.valkyrie.port | default 8080 }}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5 
      # volumes:
      #   - name: valkyrie-server-vol
      #     persistentVolumeClaim:
      #       claimName: valkyrie-server-pvc
      restartPolicy: Always
