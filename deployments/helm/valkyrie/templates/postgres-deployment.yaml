apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkyrie-postgres
  labels:
    app: valkyrie
    component: postgres
spec:
  replicas: {{ .Values.postgres.replicas | default 1 }}
  selector:
    matchLabels:
      app: valkyrie
      component: postgres
  strategy: {}
  template:
    metadata:
      labels:
        app: valkyrie
        component: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image | default "postgres:15.3" }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.postgres.port | default 5432 }}
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-env
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-env
                  key: POSTGRES_HOST
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: postgres-env
                  key: postgres-password
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-env
                  key: POSTGRES_PORT
            - name: POSTGRES_SSL_MODE
              valueFrom:
                configMapKeyRef:
                  name: postgres-env
                  key: POSTGRES_SSL_MODE
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-env
                  key: postgres-user
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.user | default "thors" }}
                - -d
                - {{ .Values.postgres.db | default "valkyrie" }}
                - -p
                - "{{ .Values.postgres.port | default 5432 }}"
            initialDelaySeconds: {{ .Values.postgres.livenessProbe.initialDelaySeconds | default 30 }} # Give Postgres time to start
            periodSeconds: {{ .Values.postgres.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.postgres.livenessProbe.timeoutSeconds | default 5 }}
            successThreshold: 1
            failureThreshold: {{ .Values.postgres.livenessProbe.failureThreshold | default 5 }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.user | default "thors" }}
                - -d
                - {{ .Values.postgres.db | default "valkyrie" }}
                - -p
                - "{{ .Values.postgres.port | default 5432 }}"
            initialDelaySeconds: {{ .Values.postgres.readinessProbe.initialDelaySeconds | default 10 }} # Readiness can be probed sooner
            periodSeconds: {{ .Values.postgres.readinessProbe.periodSeconds | default 5 }}
            timeoutSeconds: {{ .Values.postgres.readinessProbe.timeoutSeconds | default 3 }}
            successThreshold: 1
            failureThreshold: {{ .Values.postgres.readinessProbe.failureThreshold | default 3 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data # Standard Postgres data directory
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: valkyrie-postgres-pvc
      restartPolicy: Always
