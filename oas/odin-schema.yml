openapi: '3.0.2'
info:
  title: API Title
  version: '0.0.1'
servers:
  - url: http://localhost:8080/api/v1
paths:
  /executions/execute/:
    post:
      summary: Execute a script
      description: Execute a script
      operationId: execute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - executionId
                properties:
                  executionId:
                    type: integer
                    format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /executions/:
    get:
      summary: Get all executions
      description: Get all executions
      operationId: getExecutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Execution'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /executions/{executionId}/:
    get:
      summary: Get execution result
      description: Get execution result
      operationId: getExecutionResult
      parameters:
        - name: executionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Execution not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete execution
      description: Delete execution
      operationId: deleteExecution
      parameters:
        - name: executionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Execution not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /executions/workers:
    get:
      summary: Get all execution workers
      description: Get all execution workers
      operationId: getExecutionWorkers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutionWorker'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /version/:
    get:
      summary: Get version
      description: Get version
      operationId: getVersion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - version
                properties:
                  version:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /execution/config/:
    get:
      summary: Get execution config
      description: Get execution config
      operationId: getExecutionConfig
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionConfig'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    EnvironmentVariable:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Script:
      type: object
      properties:
        name:
          type: string
        script:
          type: string
    ExecutionEnvironmentSpec:
      type: object
      properties:
        environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        languageDependencies:
          type: array
          items:
            type: string
        systemDependencies:
          type: array
          items:
            type: string
        args:
          type: string
    ProgrammingLanguage:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        version:
          type: string
    File:
      type: object
      required:
        - content
      properties:
        name:
          type: string
        content:
          type: string
    ExecutionRequest:
      type: object
      required:
        - code
        - language
        - environment
      properties:
        environment:
          oneOf:
            - $ref: '#/components/schemas/Flake'
            - $ref: '#/components/schemas/ExecutionEnvironmentSpec'
        config:
          oneOf:
            - $ref: '#/components/schemas/DockerExecutionConfig'
            - $ref: '#/components/schemas/PodmanExecutionConfig'
        code:
          type: string
        language:
          type: string
        priority:
          type: integer
          format: int4
    DockerExecutionConfig:
      type: object
      properties:
        containerConfig:
          type: object
          properties:
            image:
              type: string
        HostConfig:
          type: object
          properties:
            Resources:
              type: object
              properties:
                Memory:
                  type: integer
                NanoCPUs:
                  type: integer
            Runtime:
              type: string
    PodmanExecutionConfig:
      type: object
      properties:
        ContainerBasicConfig:
          type: object
          properties:
            OCIRuntime:
              type: string
        ContainerStorageConfig:
          type: object
          properties:
            Image:
              type: string
            ImageOS:
              type: string
            ImageArch:
              type: string
            ImageVariant:
              type: string
    ExecutionResult:
      type: object
      required:
        - executionId
        - logs
      properties:
        executionId:
          type: integer
          format: int64
        logs:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Execution:
      type: object
      required:
        - executionId
        - script
        - flake
        - created_at
        - logs
        - finished_at
      properties:
        executionId:
          type: integer
          format: int64
        script:
          type: string
        flake:
          type: string
        created_at:
          type: string
          format: date-time
        logs:
          type: string
        finished_at:
          type: string
          format: date-time
    Flake:
      type: string
    ExecutionStatus:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
    ExecutionWorker:
      type: object
      required:
        - id
        - name
        - status
        - created_at
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        created_at:
          type: string
          format: date-time
        status:
          type: string
    ExecutionConfig:
      type: object
      required:
        - ODIN_WORKER_PROVIDER
        - ODIN_WORKER_CONCURRENCY
        - ODIN_WORKER_BUFFER_SIZE
        - ODIN_WORKER_TASK_TIMEOUT
        - ODIN_WORKER_POLL_FREQ
        - ODIN_WORKER_RUNTIME
        - ODIN_LOG_LEVEL
      properties:
        ODIN_WORKER_PROVIDER:
          type: string
          description: Represents the worker provider.
        ODIN_WORKER_CONCURRENCY:
          type: integer
          format: int32
          description: Represents the concurrency level for the worker.
        ODIN_WORKER_BUFFER_SIZE:
          type: integer
          format: int32
          description: Represents the buffer size for the worker.
        ODIN_WORKER_TASK_TIMEOUT:
          type: integer
          description: Represents the task timeout.
        ODIN_WORKER_POLL_FREQ:
          type: integer
          description: Represents the polling frequency for the worker in seconds.
        ODIN_WORKER_RUNTIME:
          type: string
          description: Represents the runtime for the worker in seconds.
        ODIN_LOG_LEVEL:
          type: string
          description: Represents the log level.
        ODIN_SYSTEM_PROVIDER_BASE_DIR:
          type: string
          description: Represents the base directory for the system provider.
        ODIN_SYSTEM_PROVIDER_CLEAN_UP:
          type: boolean
          description: Represents whether to clean up directories created by the system provider.
        
        
        
        
